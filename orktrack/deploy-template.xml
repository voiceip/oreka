<?xml version="1.0"?>
<project name="ServletDeploy" default="do_everything">
   <!--
      By default, this ANT script does NOT compile the application,
      we are relying on Eclipse to do all Java compilation.
      This script merely deploys the application to Tomcat.
      
      If you don't want to use Eclipse to compile, run this script
      with target "compile_java" and it will compile all files, as well as
      deploy the application to Tomcat.

      You will need Tomcat manager running and working
      login for Tomcat manager. To create a user for
      Tomcat manager, edit the file
      
         <tomcat>\conf\tomcat-users.xml
         
      and add a line for the desired user, such as
      
        <user 
           username="username" 
           password="password" 
           fullName="Your Fullname" 
           roles="manager"/>

      If it is not already there, you may want a to add 
      the manager role above the user line... such as
      
         <role rolename="manager"/>
      	
     Using the manager to install/remove applications keeps
     you from having to stop and restart Tomcat every time
     you need to update your application.
   -->
	
	<!-- Change these properties to suit your needs (Begin)-->
   <property name="application" value="orktrack" />
   <property name="tomcatHome" value="C:\Program Files\Apache Software Foundation\Tomcat 7.0" />
   <property name="tomcatHomeEsc" value="C:/Program%20Files/Apache%20Software%20Foundation/Tomcat%207.0" />
   <property name="workspaceHome" value="c:/devOrk/" />
   <property name="mgrUsername" value="admin" />
   <property name="mgrPassword" value="" />
   <property name="javadependencies" value="c:/oreka-1.7-java-dependencies" />
   <property name="svnRevCmd" value="C:/Program Files/TortoiseSVN/bin/SubWCRev" />
	<!-- Change these properties to suit your needs (End)-->

	
   <property name="webappsHome" value="${tomcatHome}/webapps" />
   <property name="webappsHomeEsc" value="${tomcatHomeEsc}/webapps" />	
   <property name="appHome" value="${webappsHome}/${application}" />
   <property name="contextHome" value="${workspaceHome}/${application}/context" />
   <property name="srcHome" value="${workspaceHome}/${application}/src" /> 
   <property name="deployWarDir" value="${workspaceHome}/${application}/DeployWar" />
   <property name="mgrUrl" value="http://localhost:8080/manager/text" />
   <property name="mgrRemoveUrl" value="${mgrUrl}/undeploy" />
   <property name="mgrDeployUrl" value="${mgrUrl}/deploy" />
   <property name="orkbasejHome" value="${workspaceHome}/orkbasej" />

   <target name="compile_java_base">
     <mkdir dir="${orkbasejHome}/bin" /> 
     <javac srcdir="${orkbasejHome}/java"
            destdir="${orkbasejHome}/bin"
            fork="java$$javac.exe"
            source="1.8">
         <classpath id="base.path">
           	<fileset dir="${javadependencies}">
             		<include name="**/*.jar"/>
      		</fileset>
     	 </classpath>        
     </javac>
   </target>
   
   <target name="compile_java" depends="compile_java_base">
        <mkdir dir="${contextHome}/WEB-INF/classes" /> 
        <javac srcdir="${workspaceHome}/${application}/src"
                destdir="${contextHome}/WEB-INF/classes"
                fork="java$$javac.exe"
                source="1.8">
        	<classpath>
           		<path refid="base.path"/>
           		<pathelement location="${orkbasejHome}/bin"/>
        	</classpath>  
        </javac>
        <!--<antcall target="do_everything"/>-->
   </target>
   
	<target name="create_war">
	      <mkdir dir="${deployWarDir}" /> 
	      <delete file="${deployWarDir}/${application}.war" />
	      <war
	        duplicate="preserve"
	      	destfile="${deployWarDir}/${application}.war"
	      	webxml="${contextHome}/WEB-INF/web.xml">
	      	<classes dir="${contextHome}/WEB-INF/classes" />
	      	<classes dir="${orkbasejHome}/bin" />
	      	<fileset dir="${contextHome}">
	      	   <include name="*" />
	      	   <include name="images/*" />
	      	   <include name="WEB-INF/*.page" />
	      	   <include name="WEB-INF/*.application" />
	      	   <include name="WEB-INF/*.jwc" />
	      	   <include name="WEB-INF/*.html" />
	      	   <include name="WEB-INF/*.properties" />      	   
	      	   <include name="WEB-INF/version.txt" />      	   
	      	   <include name="css/*.css" />
	      	</fileset>
	      </war>
	</target>

	<target name="remove_context">
	      <delete file="temp.txt" />
	      <get
	         src="${mgrRemoveUrl}?path=/${application}"
	         dest="temp.txt"
	         username="${mgrUsername}" 
	         password="${mgrPassword}" />
	      <loadfile property="remove.result"
	         srcFile="temp.txt" />
	      <echo>${remove.result}</echo>
	      <delete file="temp.txt" />	
		
	      <!-- Remove the directory containing the old version of the application -->
	      <delete dir="${webappsHome}/${application}" />
	</target>
	
   <target name="deploy">        
      <!-- Deploy to Tomcat -->
      <unzip 
         src="${deployWarDir}/${application}.war"
         dest="${webappsHome}/${application}" />
   </target> 

	<target name="install_context">
	      <!-- Install the application -->
	      <delete file="temp.txt" />
	      <property name="mgrDeployParams"
	         value="path=/${application}&amp;war=file://${webappsHomeEsc}/${application}/" />
	      <get
	         src="${mgrDeployUrl}?${mgrDeployParams}"
	         dest="temp.txt"
	         ignoreerrors="true"
	         verbose="true"
	         username="${mgrUsername}" 
	         password="${mgrPassword}" />
	      <loadfile property="install.result"
	         srcFile="temp.txt" />
	      <echo>${install.result}</echo>
	      <delete file="temp.txt" />	
	</target>
	
	<!--Get updated subversion revision of the working folder-->
	<target name="version">
		<exec executable="cmd">
			<arg value="/c"/>
			<arg value="${svnRevCmd}"/>
			<arg value="${workspaceHome}"/>
			<arg value="${workspaceHome}/${application}/version_template.txt"/>
			<arg value="${contextHome}/WEB-INF/version.txt"/>
			<arg value="-p"/>			
		</exec>
	</target>

 	<!--Print build date/time-->
	<target name="build_timestamp">
	  <tstamp>
		<format property="current.time" pattern="yyyy-MM-dd HH:mm:ss" />
	  </tstamp>
	  <echo>Build date/time: ${current.time}</echo>
	</target>

   <target name="do_everything" depends="version,create_war,remove_context,deploy,install_context,build_timestamp" />

</project>
